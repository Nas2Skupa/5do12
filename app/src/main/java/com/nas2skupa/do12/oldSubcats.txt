package com.nas2skupa.do12;


import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

//import com.nas2skupa.do12.MainActivity.GetContacts;
import com.nas2skupa.do12.R;
import java.util.ArrayList;
import java.util.HashMap;
 
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;
 
import android.app.ListActivity;
import android.app.ProgressDialog;
import android.content.Intent;
import android.os.AsyncTask;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.ListAdapter;
import android.widget.ListView;
import android.widget.SimpleAdapter;
import android.widget.ListAdapter;
import android.annotation.SuppressLint;
import android.app.ActionBar.LayoutParams;
import android.app.Activity;
import android.app.ProgressDialog;
import android.content.Intent;
import android.graphics.Color;
import android.graphics.Typeface;
import android.os.AsyncTask;
import android.os.Bundle;
import android.util.Log;
import android.view.Gravity;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.AdapterView;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.ListAdapter;
import android.widget.ListView;
import android.widget.SimpleAdapter;
import android.widget.TextView;
import android.widget.Toast;
import android.widget.AdapterView.OnItemClickListener;

public class Subcats extends ListActivity {

    private ProgressDialog pDialog;
 
    // URL to get contacts JSON
    private static String url = "http://nas2skupa.com/5do12/getPro.aspx?id=";
    

    private static final String TAG_CONTACTS = "contacts";
    private static final String TAG_ID = "id";
    private static final String TAG_NAME = "name";
    private static final String TAG_EMAIL = "email";
    private static final String TAG_ADDRESS = "address";
    private static final String TAG_GMAP = "gmap";
    private static final String TAG_ABOUT = "about";
    private static final String TAG_CATEGORY = "category";
    private static final String TAG_SUBCAT = "subcat";
    private static final String TAG_PHONE_OFFICE = "office";
    
 // contacts JSONArray
    JSONArray providers = null;
 
    // Hashmap for ListView
    ArrayList<HashMap<String, String>> providerList;
    
	public String zdravlje[]={"POLIKLINIKA",
			"STOMATOLOGIJA",
			"PEDIJATRIJA",
			"OFTAMOLOGIJA & OPTIKA",
			"GINEKOLOGIJA",
			"ESTETSKA & REKONSTRUKTIVNA KIRURGIJA",
			"LOGOPEDIJA",
			"MASAŽA & FIZIOTERAPIJA",
			"DERMATOVENEROLOGIJA",
			"SISTEMATSKI PREGLEDI",
			"NJEGA U KUÆI",
			"ALTERNATIVNA MEDICINA",
			"PSIHOTERAPIJA",
			"MEDICINSKA PEDIKURA",
			"VETERINA"
};
	public String servis[]={"VODOINSTALACIJA",
			"STOLARIJA",
			"BRAVARIJA",
			"ELEKTRIKA",
			"KERAMIKA",
			"KNAUF",
			"LIÈENJE",
			"AUTO SERVIS",
			"ÈIŠÆENJE", 
			"DIMNJACI",
			"STAKLO",
			"ZANATI",
			"GRAÐEVINSKE USLUGE"

};
	public String ljepota[]={"FRIZERSKI SALON",
			"KOZMETIÈKI SALON",
			"MANIKURA & PEDIKURA",
			"SALON LJEPOTE",
			"WELLNESS",
			"MASAŽA",
			"PARFUMERIJA",
			"ZLATARNICA"
};
	public String dom[]={"ÈIŠÆENJE STANOVA",
			"NJEGA U KUÆI",
			"IGRAONICE",
			"HORTIKULTURA",
			"PRAONICA RUBLJA",
			"UREÐENJE INTERIJERA",
			"DADILJA",
			"KEMIJSKA ÈISTIONA",
			"FOTO STUDIO & SNIMANJE",
			"CVJEÆARNE",
			"PARFUMERIJA",
			"ZLATARNICA"

};
	public String intelekt[]={"INSTRUKCIJE",
			"ODVJETNIÈKI URED",
			"JEZICI",
			"TEÈAJ PLESA",
			"RADIONICE",
			"FOTO STUDIO & SNIMANJE",
			"PROJEKTIRANJE INTERIJERA",
			"PROJEKTIRANJE EKSTERIJERA",
			"GRAFIÈKA OBRADA & DIZAJN",
			"INFORMATIÈKE USLUGE",
			"GRAÐEVINSKE USLUGE",
			"SUDSKI TUMAÈ",
			"KNJIGOVODSTVO & FINANCIJE"

};
	public String sport[]={"TENIS",
			"NOGOMET",
			"SQUASH",
			"BAZENI",
			"BORILAÈKI SPORTOVI",
			"BADMINTON",
			"PAINTBALL",
			"FITNESS",
			"AEROBIC & PILATES",
			"PLES",
			"JOGA",
			"OSTALO"
};	
	public String turizam[]={"TURISTIÈKE AGENCIJE & ARANŽMANI",
			"HOTELI",
			"SEOSKI TURIZAM",
			"RESTAURANTI",
			"SLASTICE",
			"CAFFE BAR",
			"VINSKI PUTEVI"
};
	public String prijevoz[]={"TAXI USLUGE",
			"PRESELJENJE",
			"RENT A CAR",
			"RENT A BIKE",
			"RENT A SEGWAY",
			"TRANSPORT"
};
	public String kultura[]={"KAZALIŠTE",
			"KONCERTI",
			"KINO",
			"RESTAURANTI",
			"CAFFE BAR & CLUB"
};
	
	@Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.subcats);
       Bundle extras = getIntent().getExtras();
       String subcat = extras.getString("subcat");
       //getSubCat(subcat);
       providerList = new ArrayList<HashMap<String, String>>();
       
       ListView lv = getListView();

       // Listview on item click listener
       lv.setOnItemClickListener(new OnItemClickListener() {

           @Override
           public void onItemClick(AdapterView<?> parent, View view,
                   int position, long id) {
               // getting values from selected ListItem
               String name = ((TextView) view.findViewById(R.id.name))
                       .getText().toString();
               String cost = ((TextView) view.findViewById(R.id.email))
                       .getText().toString();
               String description = ((TextView) view.findViewById(R.id.mobile))
                       .getText().toString();

               // Starting single contact activity
               Intent in = new Intent(getApplicationContext(),
                       SingleContactActivity.class);
               in.putExtra(TAG_NAME, name);
               in.putExtra(TAG_EMAIL, cost);
               in.putExtra(TAG_ABOUT, description);
               startActivity(in);

           }
       });

       // Calling async task to get json
       new GetProviders().execute();
       
       
       
    }

	
	
	
    private class GetProviders extends AsyncTask<Void, Void, Void> {
    	 
        @Override
        protected void onPreExecute() {
            super.onPreExecute();
            // Showing progress dialog
            pDialog = new ProgressDialog(Subcats.this);
            pDialog.setMessage("Please wait...");
            pDialog.setCancelable(false);
            pDialog.show();
 
        }
 
        @Override
        protected Void doInBackground(Void... arg0) {
            // Creating service handler class instance
            ServiceHandler sh = new ServiceHandler();
 
            // Making a request to url and getting response
            String jsonStr = sh.makeServiceCall(url+1, ServiceHandler.GET);
 
            Log.d("Response: ", "> " + jsonStr);
 
            if (jsonStr != null) {
                try {
                    JSONObject jsonObj = new JSONObject(jsonStr);
                     
                    // Getting JSON Array node
                    providers = jsonObj.getJSONArray(TAG_CONTACTS);
 
                    // looping through All Contacts
                    for (int i = 0; i < providers.length(); i++) {
                        JSONObject c = providers.getJSONObject(i);
                         
                        String id = c.getString(TAG_ID);
                        String name = c.getString(TAG_NAME);
                        String email = c.getString(TAG_EMAIL);
                        String address = c.getString(TAG_ADDRESS);
                       // String gender = c.getString(TAG_GENDER);
 
                        // Phone node is JSON Object
                       /* JSONObject phone = c.getJSONObject(TAG_PHONE);
                        String mobile = phone.getString(TAG_PHONE_MOBILE);
                        String home = phone.getString(TAG_PHONE_HOME);
                        String office = phone.getString(TAG_PHONE_OFFICE);
 */
                        // tmp hashmap for single contact
                        HashMap<String, String> provider = new HashMap<String, String>();
 
                        // adding each child node to HashMap key => value
                        provider.put(TAG_ID, id);
                        provider.put(TAG_NAME, name);
                        provider.put(TAG_EMAIL, email);
                      //  provider.put(TAG_PHONE_MOBILE, mobile);
 
                        // adding contact to contact list
                        providerList.add(provider);
                    }
                } catch (JSONException e) {
                    e.printStackTrace();
                }
            } else {
                Log.e("ServiceHandler", "Couldn't get any data from the url");
            }
 
            return null;
        }
 
        @Override
        protected void onPostExecute(Void result) {
            super.onPostExecute(result);
            // Dismiss the progress dialog
            if (pDialog.isShowing())
                pDialog.dismiss();
            /**
             * Updating parsed JSON data into ListView
             * */
            ListAdapter adapter = new SimpleAdapter(
                    Subcats.this, providerList,
                    R.layout.list_item, new String[] { TAG_NAME, TAG_EMAIL,
                            TAG_ID }, new int[] { R.id.name,
                            R.id.email, R.id.mobile });
 
            setListAdapter(adapter);
        }
 
    }
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	@SuppressLint("NewApi") @Override
	public boolean onCreateOptionsMenu(Menu menu) {
		getActionBar().setIcon(android.R.color.transparent);
		getMenuInflater().inflate(R.menu.main, menu);
		return true;
	}
	@Override
	public boolean onOptionsItemSelected(MenuItem item) {

		switch (item.getItemId()) {

		case R.id.home:
			homeActivity();
			return true;

		case R.id.list:
			listActivity();
			return true;

		case R.id.fav:
			favActivity();
			return true;

		case R.id.vazno:
			vaznoActivity();
			return true;
			
		case R.id.option:
			optionActivity();
			return true;

		default:
			return super.onOptionsItemSelected(item);
		}

	}


	public void homeActivity() {
		Intent i = new Intent(this, HomeScreen.class);
	    startActivity(i);
	}


	public void listActivity() {
		//Toast.makeText(this, "List Option Selexted", Toast.LENGTH_SHORT).show();
    	Intent i = new Intent(this, SplashScreen.class);
	    startActivity(i);
	}

	public void favActivity() {
		Toast.makeText(this, this+"dsa", Toast.LENGTH_SHORT).show();
	}

	public void vaznoActivity() {
		Toast.makeText(this, "Važno Option Selexted", Toast.LENGTH_SHORT).show();
	}
	
	public void optionActivity() {
		Toast.makeText(this, "Opcije Option Selexted", Toast.LENGTH_SHORT).show();
	}
    
	@SuppressLint("NewApi") public void getSubCat(String subcatname){
		String bckclr="#00FF00";
		String name=null;
		String lista[]=null;
		int katID=-1;
		if("zdravlje".equals(subcatname)){
			bckclr="#7ec5c4"; 
			name="zdrastvene usluge";
			lista=Arrays.copyOf(zdravlje, zdravlje.length);
			katID=1;
		}
		if("servis".equals(subcatname)){
			bckclr="#8c7c66"; 
			name="servis i održavanje";
			lista=Arrays.copyOf(servis, servis.length);
			katID=2;
		}
		if("ljepota".equals(subcatname)){
			bckclr="#f5b2b5"; 
			name="ljepota";
			lista=Arrays.copyOf(ljepota, ljepota.length);
			katID=3;
		}
		if("intelekt".equals(subcatname)){
			bckclr="#fad12f"; 
			name="intelektualne usluge";
			lista=Arrays.copyOf(intelekt, intelekt.length);
			katID=4;
		}
		if("dom".equals(subcatname)){
			bckclr="#687f95"; 
			name="dom i obitelj";
			lista=Arrays.copyOf(dom, dom.length);
			katID=5;
		}
		if("sport".equals(subcatname)){
			bckclr="#7dad91"; 
			name="sport i rekreacija";
			lista=Arrays.copyOf(sport, sport.length);
			katID=6;
		}
		if("turizam".equals(subcatname)){
			bckclr="#e2a217"; 
			name="turizam i ugostiteljstvo";
			lista=Arrays.copyOf(turizam, turizam.length);
			katID=7;
		}
		if("prijevoz".equals(subcatname)){
			bckclr="#919294";
			name="prijevoz"; 
			lista=Arrays.copyOf(prijevoz, prijevoz.length);
			katID=8;
		}
		if("kultura".equals(subcatname)){
			bckclr="#826882"; 
			name="kultura i zabava";
			lista=Arrays.copyOf(kultura, kultura.length);
			katID=9;
		}
		TextView naslov = (TextView) findViewById(R.id.catname);	
		naslov.setText(name);
		Typeface face = Typeface.createFromAsset(getAssets(),"fonts/Helvetica.ttf");
		naslov.setTypeface(face);
		naslov.setTextSize(16);
		naslov.setAllCaps(true);
		naslov.setTextColor(Color.parseColor("#FFFFFF"));
		naslov.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
		naslov.setBackgroundColor(Color.parseColor(bckclr));
		populatelist(lista,katID);
	}
	
	public void getProList(int katID){
		Intent i = new Intent(this, ProviderList.class).putExtra("katID", katID);
		startActivity(i);	
		}
	public void populatelist(String[] lista, int katID){
		
		for (int x=0;x<lista.length;x++){
			Button btn = new Button(this);
			//Typeface face = Typeface.createFromAsset(getAssets(),"fonts/Helvetica-Bold.ttf");
			//btn.setTypeface(face);
			btn.setTextSize(16);
			btn.setTextColor(Color.parseColor("#666666"));
			btn.setPadding(20, 5,0,0);
			btn.setGravity(Gravity.CENTER_VERTICAL);
			btn.setText(lista[x]);
			btn.setBackgroundResource(R.drawable.subcatbtn);
	
			LinearLayout ll = (LinearLayout)findViewById(R.id.subcatlist);
			LayoutParams lp = new LayoutParams(LayoutParams.MATCH_PARENT, LayoutParams.WRAP_CONTENT);
			ll.addView(btn, lp);
			final String name_=lista[x];
			final int katID_=katID;
			btn.setOnClickListener(new View.OnClickListener() {
		        public void onClick(View view) {
		            getProList(katID_);
		        }
		    });
		}
	}
}
